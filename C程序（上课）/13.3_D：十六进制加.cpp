/*
十六进制加

题目描述
在十六进制表示中，ABCDEF用于表示十进制的10、11、12、13、14、15
现输入两个表示十六进制整数的字符串，请计算它们相加的结果，用十进制表示。
如果输入的字符串包含非十六进制的编码，无需计算，直接输出-1表示错误 
十六进制转十进制举例，例如十六进制数23A4共有4位数，从右往左数，含义如下：
数字2在第4位，对应16的3次方
数字3在第3位，对应16的2次方
数字A表示十进制的10，它在第2位，对应16的1次方
数字4在第1位，对应16的0次方
因此23A4 = 2*16^3 +3*16^2 + 10*16^1 + 4*16^0
                  = 2*4096 + 3*256 + 10*16 + 4*1
                  = 17316
所以十六进制的23A4转成十进制是17316 

输入 
第一行输入T表示有T个测试实例
第二行输入第一个十六进制整数的字符串（长度不超过5）
第二行输入第二个十六进制整数的字符串（长度不超过5）
依此类推输入下一个实例

输出
输出相加的结果，用十进制表示

样例输入
3
A8
9F
3322Q
44455
11111
22222

样例输出
327
-1
209715

*/

#include<stdio.h>
#include<string.h>

int change16To10(char a[])
{
	int i,j,m,n,k=0;
	for(i=0;i<strlen(a);i++){
		if(a[i]>=65&&a[i]<=70){
			a[i]-=7;
		}
		else if(a[i]>=48&&a[i]<=57){
			
		}
		else{
			return -1;
		}
		m=(int)(a[i]-48);
		n=1;
		for(j=1;j<strlen(a)-i;j++){
			n*=16;
		}
		n*=m;
		k+=n;
	}
	return k;
}

int main()
{
	int t,m,k,k1,k2,i,j,judge;
	char a[100],b[100];
	scanf("%d\n",&t);
	while(t--){
		gets(a);
		gets(b);
		k1=change16To10(a);
		k2=change16To10(b);
		if(k1==-1||k2==-1){
			printf("-1\n");
		}
		else{
			printf("%d\n",k1+k2);
		}
	}
}
