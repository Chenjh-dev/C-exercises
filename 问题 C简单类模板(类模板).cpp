/*
问题 C: 简单类模板(类模板)

题目描述
定义一个列表类，该列表包含属性：数值列表（用长度为100的数组表示），数据长度（实际的数据个数）；
包含的方法：初始化、插入、删除、打印，方法定义为：
1）初始化，接受外来参数，把数据保存在数值列表中，未使用的列表部分全部初始化为-1
2）插入，接受外来参数的插入位置和插入数值，插入位置从0开始计算，
   注意从插入位置开始，原有数据都要往后移动一位，且数据长度+1
3）删除，接受外来参数的删除位置，删除位置从0开始计算，注意从删除位置后一位开始，
  原有数据都要往前移动一位，且数据长度-1
4）打印，把包含的数据按位置顺序输出一行，数据之间单个空格隔开
使用类模板的方法，使得这个类支持整数int类型和浮点数double类型

输入
第一行先输入参数n表示有n个数据，接着输入n个整数
第二行输入两个参数，表示插入位置和插入数值，数值为整数
第三行输入删除位置
第四行先输入参数n表示有n个数据，接着输入n个浮点数
第五行输入两个参数，表示插入位置和插入数值，数值为浮点数
第六行输入删除位置

输出
针对头三行输入，分别执行初始化、插入操作和删除操作，
调用打印方法输出列表包含的整数数据
针对接着的三行输入，分别执行初始化、插入操作和删除操作，
调用打印方法输出列表包含的浮点数数据

样例输入
5 11 22 33 44 55
2 888
4
5 1.1 2.2 3.3 4.4 5.5
2 88.8
3

样例输出
11 22 888 33 55
1.1 2.2 88.8 4.4 5.5

按题目要求定义一个类模板，并在主函数输入数据定义对象并调用相应成员函数实现程序功能。
*/

#include<iostream>
using namespace std;

template <class T>
class List
{
	private:
		T a[100];
		int n;
	public:
		List(T *k,int n)
		{
			for(int i=0;i<n;i++)
				a[i]=k[i];
			this->n=n;
		}
		void insert(int b,T c)
		{
			int i;
			for(i=n;i>b;i--)
				a[i]=a[i-1];
			a[b]=c;
			n++;
		}
		void del(int b)
		{
			int i;
			for(i=b;i<n-1;i++)
				a[i]=a[i+1];
			n--;
		}
		void print()
		{
			for(int i=0;i<n;i++)
				cout<<a[i]<<" ";
			cout<<endl;
		}
};

int main()
{
	int n,*k1,i,x1,x2;
	double *k2,x3,x4;
	
	cin>>n;
	k1=new int[n+1];
	for(i=0;i<n;i++)
		cin>>k1[i];
	List<int> h1(k1,n);
	cin>>x1>>x2;
	h1.insert(x1,x2) ;
	cin>>x1;
	h1.del(x1);
	h1.print() ;
	
	cin>>n;
	k2=new double[n+1];
	for(i=0;i<n;i++)
		cin>>k2[i];
	List<double> h2(k2,n);
	cin>>x3>>x4;
	h2.insert(x3,x4) ;
	cin>>x3;
	h2.del(x3);
	h2.print() ;
	
	delete []k1;
	delete []k2;
}
