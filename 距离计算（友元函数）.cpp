/*
距离计算（友元函数）

题目描述
Point类的基本形式如下：
http://172.31.221.21/JudgeOnline/upload/pimg1096_1.png
请完成如下要求：
1.实现Point类；
2.为Point类增加一个友元函数double Distance(Point &a, Point &b),
用于计算两点之间的距离。直接访问Point对象的私有数据进行计算。
3.编写main函数，输入两点坐标值，计算两点之间的距离。

输入
第1行：输入需计算距离的点对的数目
第2行开始，每行依次输入两个点的x和y坐标

输出
每行依次输出一组点对之间的距离（结果直接取整数部分,不四舍五入 ）

样例输入
2
1 0 2 1
2 3 2 4

样例输出
1
1

按题目要求完成Point类和Distance函数的定义。
主函数输入数据、定义Point对象并调用Distance函数输出结果。

*/




#include<iostream>
#include<math.h>
using namespace std;

class Point 
{
	public:
		Point(double xx,double yy){x=xx,y=yy;}
		friend int Distance(Point &a, Point &b);
	private:
		double x,y;
};

int Distance(Point &a, Point &b)
{
	int k;
	double h;
	h = (a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y);
	h = sqrt(h);
	k = int(h);
	return k;
}

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int x1,x2,y1,y2;
		cin>>x1>>y1>>x2>>y2;
		Point a(x1,y1);
		Point b(x2,y2);
		cout<< Distance(a,b) <<endl;
	}
}
